Инструкция для настройки и работы с пакетом исходников и мода.

Сама по себе пересборка состоит из пяти этапов - сборка движка, сборка СДК, сборка компиляторов, сборка конфигуратора и 
сборка пакета мода. Если что-то из этого не надо - пропускайте описание.

Структура проекта достаточно жестка и предполагает четыре папки в корне:
* 3rd_party - папка с исходниками, заголовками и библиотеками импорта сторонних производителей. Нужна для сборки движка и СДК.
Брать по ссылке ***.
* ogsr_engine - папка с исходниками движка. Клонируйте отсюда: https://KD87@bitbucket.org/ogsr/ogsr-engine.git
* ogsr_package - папка для сборки пакета мода. Основные файлы хранятся в том же репозитории, другие создадутся сами.
* ogsr_resources - папка с конфигами и скриптами. Клонируйте отсюда: https://KD87@bitbucket.org/ogsr/ogsr-resources.git
Перед работой необходимо "заполнить" эти папки.

1. Сборка движка.
Для сборки понадобится:
	Visual Studio 2017. Должна подойти и 2013 и 2015я студия, но проверялось крайний раз все на 2017.
	Windows 10 SDK. Аналогично может подойти и 8.1.
Устанавливаете нужные программы. Запускаете батник 1_create_disk_x, предварительно заменив в нем путь до будщего местоположения 
файлов проекта. Проект исходников движка запускается с ярлыка Engine в корне. Далее просто запускаете 
построение решения (или отдельных бинарников) в студии, готовые файлы будут автоматически копироваться в папку 
ogsr_package/READY/BIN. При необходимости (она не должна возникнуть) можно также перестроить сторонние библиотеки 
(ярлык Third party libs). В любом случае, в студии выбираете Сборка -> Собрать решение, предварительно выставив нужную 
платформу - win32 или x64. Помните, что движок и xrAI собирается только в win32, а остальные компиляторы - в x64.
Сторонние библиотеки необходимо собирать в обоих вариантах, если хотите пользоваться компиляторами.
В целом все.

2. Сборка СДК.
Для сборки _дополнительно_ понадобится Borland C++ Builder 6. Устанавливаете, даете права администратора для bcb.exe, 
отключаете DEP для него же. Далее в список переменных среды Windows добавляете переменную BUILDER_PATH, указывающую на 
папку bin в папке установленного билдера.
Открываете билдер, можно пока без проекта. В переменные билдера (Tools -> Environment Options, вкладка Environment Variables) 
нужно добавить следующие:
COMMON_LIB		==> X:\ogsr_engine\_LIB\SDK\Win32
3RDPARTY_LIB	==> X:\3rd_party\_LIB\SDK\Win32\
ETOOLS_DIR		==> X:\ogsr_engine\ETools\
COMMON_BIN		==> X:\ogsr_engine\_BIN\SDK\Win32\
COMMON_TEMP		==> X:\ogsr_engine\_TEMP\SDK\Win32\
COMPONENTS		==> X:\3rd_party\Src\components\
AL_DIR			==> X:\3rd_party\Src\OpenAL\include
XIPH_DIR		==> X:\3rd_party\Src\Xiph
CORE_DIR		==> X:\ogsr_engine\xrCore
EAX_DIR			==> X:\3rd_party\Src\eax\Include
MAGIC_SW_DIR	==> X:\3rd_party\Src\MagicSoftware
D3DX_DIR		==> X:\3rd_party\Src\d3dx\
DSOUND_DIR		==> X:\3rd_party\Src\dsound
DINPUT_DIR		==> X:\3rd_party\Src\dinput8

Далее нужно закинуть в C:\Windows\SysWOW64 следующие файлы:
X:\3rd_party\Src\components\ElPack\bpl\elpackB6.BPL
X:\3rd_party\Src\components\ElPack\bpl\elpkdbB6.BPL
X:\3rd_party\Src\components\ElPack\bpl\elpproB6.BPL

Затем в билдер нужно установить ряд компонентов (Component -> Install Packages -> Add)
X:\3rd_party\Src\components\AlexMX\editorB.bpl
X:\3rd_party\Src\components\ElPack\Code\dceldbB6.bpl
X:\3rd_party\Src\components\ElPack\Code\dcelppB6.bpl
X:\3rd_party\Src\components\ElPack\Code\dclelpB6.bpl

С настройкой все. Далее жмем батник 3_make_builder_libs.bat, нажимаем Enter, когда попросит. Этот батник создает 
библиотеки импорта, понятные билдеру. Если не перестраивали сторонние библиотеки, dxt, lwo и etools, батник можно и не жать, 
в противном случае обязательно. Дальше переоткрывайте билдер, загружайте проект с ярлыка SDK и стройте проекты. 
Сначала делаем Build -> Make All Projects, потом Build -> Build All Projects.
После построения жмите батник 4_copy_sdk - все файлы скопируются в нужное место.

3. Сборка компиляторов.
Тут все просто - выбираете конфигурацию Release|x64 в проекте Engine для студии и строите решение. Можно строить проекты 
по отдельности при необходимости. Компиляторы и библиотеки к ним строятся в версии x64, потом копируются в папку 
ogsr_package/READY/bin/x64.

4. Сборка конфигуратора.
Здесь самое простое - открываете в студии проект с ярлыка Configurator и собираете. Скомпиленные файлы прилетят куда надо 
после сборки самостоятельно.

5. Сборка пакета мода.
Для сборки мода понадобится Inno Setup.
Создаете папку ogsr_package/UNPACKED. В ней должна быть следующая структура:
base_configs
base_levels
base_meshes
base_sounds
base_textures
eng_package
rus_package
fra_package
Рассовываете файлы мода по папкам исходя из названия, потом запускаете батник ogsr_package/assemble_all. 
Открываете файл STALKER_OGSR.iss (требуется Inno Setup). Правите информацию о моде, запускаете сборку. Все, в папке OUT 
будут лежать файлы пакета мода.