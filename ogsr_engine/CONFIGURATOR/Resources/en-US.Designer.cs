//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Configurator.Resources {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class en_US {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal en_US() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Configurator.Resources.en-US", typeof(en_US).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Camera shakes and flashes.
        /// </summary>
        public static string actor_hit_all {
            get {
                return ResourceManager.GetString("actor_hit_all", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Camera shakes.
        /// </summary>
        public static string actor_hit_camera {
            get {
                return ResourceManager.GetString("actor_hit_camera", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Disabled.
        /// </summary>
        public static string actor_hit_disabled {
            get {
                return ResourceManager.GetString("actor_hit_disabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This option enables ambient music in the game. Music varies from one location to another..
        /// </summary>
        public static string ambient_music_desc {
            get {
                return ResourceManager.GetString("ambient_music_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ambient music.
        /// </summary>
        public static string ambient_music_name {
            get {
                return ResourceManager.GetString("ambient_music_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на When enabled this option disables using ammunition for guns from ruck. Place packs with bullets on belt instead.
        /// </summary>
        public static string ammo_on_belt_desc {
            get {
                return ResourceManager.GetString("ammo_on_belt_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ammo on belt.
        /// </summary>
        public static string ammo_on_belt_name {
            get {
                return ResourceManager.GetString("ammo_on_belt_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Can&apos;t find the file.
        /// </summary>
        public static string CANT_FIND_FILE {
            get {
                return ResourceManager.GetString("CANT_FIND_FILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на CNPP surge timer, min.
        /// </summary>
        public static string chaes_timer_name {
            get {
                return ResourceManager.GetString("chaes_timer_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This option enables chromatic aberration effect (light dispersion due to lens defects)..
        /// </summary>
        public static string chrom_aberr_desc {
            get {
                return ResourceManager.GetString("chrom_aberr_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Chromatic aberration effect.
        /// </summary>
        public static string chrom_aberr_name {
            get {
                return ResourceManager.GetString("chrom_aberr_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Gain of brightness of blurred pixels while dynamic depth of field is enabled. Bigger values result in nice blur of light sources, but also can overbright the sky at some weather presets. Can be changed from 1 to 4..
        /// </summary>
        public static string ddof_gain_desc {
            get {
                return ResourceManager.GetString("ddof_gain_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на DDOF gain.
        /// </summary>
        public static string ddof_gain_name {
            get {
                return ResourceManager.GetString("ddof_gain_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This option toggles visibility of the gas mask or the outfit mask and also shows the dynamic effects such as blood stains and glass fractures depending on the condition of the mask..
        /// </summary>
        public static string dinamicheski_hud_desc {
            get {
                return ResourceManager.GetString("dinamicheski_hud_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Dynamic hud.
        /// </summary>
        public static string dinamicheski_hud_name {
            get {
                return ResourceManager.GetString("dinamicheski_hud_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Depth of field.
        /// </summary>
        public static string dof {
            get {
                return ResourceManager.GetString("dof", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This option controls additional periodical spawn of stalkers and monsters in random places. It can really change the whole game, and some storyline situations will become unpredictable..
        /// </summary>
        public static string dop_spawn_desc {
            get {
                return ResourceManager.GetString("dop_spawn_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enable add. spawn after surges.
        /// </summary>
        public static string dop_spawn_name {
            get {
                return ResourceManager.GetString("dop_spawn_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Dynamic news.
        /// </summary>
        public static string dynamic_news {
            get {
                return ResourceManager.GetString("dynamic_news", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This option enables dynamic in-game news about NPCs&apos; death..
        /// </summary>
        public static string dynamic_news_desc {
            get {
                return ResourceManager.GetString("dynamic_news_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на English.
        /// </summary>
        public static string eng {
            get {
                return ResourceManager.GetString("eng", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Probability of finding an exoskeleton armor in a stalker&apos;s inventory after his death. Can be changed in the range of 1 to 15. .
        /// </summary>
        public static string exo_prob_desc {
            get {
                return ResourceManager.GetString("exo_prob_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Exo drop probability.
        /// </summary>
        public static string exo_prob_name {
            get {
                return ResourceManager.GetString("exo_prob_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Must be within the range of 5 to 140..
        /// </summary>
        public static string fov_volume_desc {
            get {
                return ResourceManager.GetString("fov_volume_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на FOV (field of view).
        /// </summary>
        public static string fov_volume_name {
            get {
                return ResourceManager.GetString("fov_volume_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Intensity of Horizon-Based Ambient Occlusion. Can be changed from 0 to 100..
        /// </summary>
        public static string hbao_int_desc {
            get {
                return ResourceManager.GetString("hbao_int_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на HBAO intensity.
        /// </summary>
        public static string hbao_int_name {
            get {
                return ResourceManager.GetString("hbao_int_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Some sort of secondary lighting imitation for SSDO. Reduces the FPS, but ambient occlusion shadows look better..
        /// </summary>
        public static string indirect_bounce_desc {
            get {
                return ResourceManager.GetString("indirect_bounce_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Indirect bounces for SSDO.
        /// </summary>
        public static string indirect_bounce_name {
            get {
                return ResourceManager.GetString("indirect_bounce_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This option enables long horizontal flare on various lamps..
        /// </summary>
        public static string long_flare_desc {
            get {
                return ResourceManager.GetString("long_flare_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Long flare.
        /// </summary>
        public static string long_flare_name {
            get {
                return ResourceManager.GetString("long_flare_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This option enables slow healing after the use of medkits, making the game more realistic..
        /// </summary>
        public static string medlen_lek_desc {
            get {
                return ResourceManager.GetString("medlen_lek_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Slow healing from medkits.
        /// </summary>
        public static string medlen_lek_name {
            get {
                return ResourceManager.GetString("medlen_lek_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Respawn multiplier.
        /// </summary>
        public static string mnog_resp_name {
            get {
                return ResourceManager.GetString("mnog_resp_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This option enables the reflection of sun or moon lights on water surfaces — the so called &quot;moonroad&quot;..
        /// </summary>
        public static string moonroad_desc {
            get {
                return ResourceManager.GetString("moonroad_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Moonroad.
        /// </summary>
        public static string moonroad_name {
            get {
                return ResourceManager.GetString("moonroad_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This is a coefficient for the frequency of dynamic news - less values result in more frequent messages..
        /// </summary>
        public static string news_freq_desc {
            get {
                return ResourceManager.GetString("news_freq_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на News frequency.
        /// </summary>
        public static string news_freq_name {
            get {
                return ResourceManager.GetString("news_freq_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Can&apos;t connect to server. Check your internet connection..
        /// </summary>
        public static string no_internet {
            get {
                return ResourceManager.GetString("no_internet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Can&apos;t find OGSE localization file.
        /// </summary>
        public static string NO_LOCALE {
            get {
                return ResourceManager.GetString("NO_LOCALE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No updates.
        /// </summary>
        public static string no_update {
            get {
                return ResourceManager.GetString("no_update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на NPC.
        /// </summary>
        public static string NPC {
            get {
                return ResourceManager.GetString("NPC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Off.
        /// </summary>
        public static string off {
            get {
                return ResourceManager.GetString("off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This option enables NPC offline simulation mode. They will fight with each other and monsters, gather items and weapons. Offline events will be described in the dynamic news..
        /// </summary>
        public static string offline_alife_desc {
            get {
                return ResourceManager.GetString("offline_alife_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Offline alife.
        /// </summary>
        public static string offline_alife_name {
            get {
                return ResourceManager.GetString("offline_alife_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на On.
        /// </summary>
        public static string on {
            get {
                return ResourceManager.GetString("on", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Patch downloaded!.
        /// </summary>
        public static string patch_downloaded {
            get {
                return ResourceManager.GetString("patch_downloaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Respawn period of new OGSE monsters (in game hours). Can differ slightly from the chosen value (one or two hours)..
        /// </summary>
        public static string period_resp_new_desc {
            get {
                return ResourceManager.GetString("period_resp_new_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Respawn period of new NPCs.
        /// </summary>
        public static string period_resp_new_name {
            get {
                return ResourceManager.GetString("period_resp_new_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Respawn period of standard stalkers and monsters (in game hours). If set to 0, then the respawn will occur immediately after sufficient free places are available..
        /// </summary>
        public static string period_resp_old_desc {
            get {
                return ResourceManager.GetString("period_resp_old_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Respawn period of standart NPCs.
        /// </summary>
        public static string period_resp_old_name {
            get {
                return ResourceManager.GetString("period_resp_old_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Player.
        /// </summary>
        public static string player {
            get {
                return ResourceManager.GetString("player", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This option toggles camera effects depending on the medical condition of the actor..
        /// </summary>
        public static string plohoe_samochustv_desc {
            get {
                return ResourceManager.GetString("plohoe_samochustv_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на «Feeling bad» effects.
        /// </summary>
        public static string plohoe_samochustv_name {
            get {
                return ResourceManager.GetString("plohoe_samochustv_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Automatic use of scope&apos;s built-in night vision function..
        /// </summary>
        public static string pnv_autostart_desc {
            get {
                return ResourceManager.GetString("pnv_autostart_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на NVD: autostart with scope.
        /// </summary>
        public static string pnv_autostart_name {
            get {
                return ResourceManager.GetString("pnv_autostart_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This option controls disabling night vision while aiming through certain scopes or when using binoculars. Does not affect night vision binoculars and scopes..
        /// </summary>
        public static string pnv_disabling_desc {
            get {
                return ResourceManager.GetString("pnv_disabling_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на NVD: disable while aiming.
        /// </summary>
        public static string pnv_disabling_name {
            get {
                return ResourceManager.GetString("pnv_disabling_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This option controls side effects of drugs in case of overdose..
        /// </summary>
        public static string poboch_lek_desc {
            get {
                return ResourceManager.GetString("poboch_lek_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Drugs&apos; side effects.
        /// </summary>
        public static string poboch_lek_name {
            get {
                return ResourceManager.GetString("poboch_lek_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на .
        /// </summary>
        public static string popadanie_po_ger_desc {
            get {
                return ResourceManager.GetString("popadanie_po_ger_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Hit / impact effects.
        /// </summary>
        public static string popadanie_po_ger_name {
            get {
                return ResourceManager.GetString("popadanie_po_ger_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This option enables psy-surge after common surge with a probablity that depends on current location..
        /// </summary>
        public static string psy_surges_desc {
            get {
                return ResourceManager.GetString("psy_surges_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Psy-surges.
        /// </summary>
        public static string psy_surges_name {
            get {
                return ResourceManager.GetString("psy_surges_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This option controls psy-zones spawn, if it updates after psy- or regular surges, or becomes completely disabled..
        /// </summary>
        public static string psyzones_desc {
            get {
                return ResourceManager.GetString("psyzones_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Disabled.
        /// </summary>
        public static string psyzones_disabled {
            get {
                return ResourceManager.GetString("psyzones_disabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Psy-zones.
        /// </summary>
        public static string psyzones_name {
            get {
                return ResourceManager.GetString("psyzones_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bound to psy-surge.
        /// </summary>
        public static string psyzones_to_psyvybros {
            get {
                return ResourceManager.GetString("psyzones_to_psyvybros", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bound to surge.
        /// </summary>
        public static string psyzones_to_vybros {
            get {
                return ResourceManager.GetString("psyzones_to_vybros", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Puddles grow rate during rain. Can be changed from 0 to 100..
        /// </summary>
        public static string puddles_grow_desc {
            get {
                return ResourceManager.GetString("puddles_grow_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Puddles grow rate.
        /// </summary>
        public static string puddles_grow_name {
            get {
                return ResourceManager.GetString("puddles_grow_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This option enables completely random content of stashes, with exception for the named ones..
        /// </summary>
        public static string random_stashes_desc {
            get {
                return ResourceManager.GetString("random_stashes_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Random stashes.
        /// </summary>
        public static string random_stashes_name {
            get {
                return ResourceManager.GetString("random_stashes_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Intensity of depth of field effect during a reload. Can be changed from 0 to 100..
        /// </summary>
        public static string rdof_int_desc {
            get {
                return ResourceManager.GetString("rdof_int_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Reload DOF intensity.
        /// </summary>
        public static string rdof_int_name {
            get {
                return ResourceManager.GetString("rdof_int_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Russian.
        /// </summary>
        public static string rus {
            get {
                return ResourceManager.GetString("rus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Volumetric light.
        /// </summary>
        public static string shafts {
            get {
                return ResourceManager.GetString("shafts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This option enables showing the contents of a stash in a hint window..
        /// </summary>
        public static string show_stashes_desc {
            get {
                return ResourceManager.GetString("show_stashes_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Show contents of stashes.
        /// </summary>
        public static string show_stashes_name {
            get {
                return ResourceManager.GetString("show_stashes_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This option enables NPCs to sleep. During the night they will be weak and will try to get some sleep if in a safe area..
        /// </summary>
        public static string son_desc {
            get {
                return ResourceManager.GetString("son_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enable sleep.
        /// </summary>
        public static string son_name {
            get {
                return ResourceManager.GetString("son_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This option enables &quot;Crysis&quot; type dust imitation in sunshafts..
        /// </summary>
        public static string ss_dust_desc {
            get {
                return ResourceManager.GetString("ss_dust_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Dust in sunshafts.
        /// </summary>
        public static string ss_dust_name {
            get {
                return ResourceManager.GetString("ss_dust_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This option enables dust imitation in volumetric light of lamps..
        /// </summary>
        public static string ss_volume_dust_desc {
            get {
                return ResourceManager.GetString("ss_volume_dust_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Dust in lamp light.
        /// </summary>
        public static string ss_volume_dust_name {
            get {
                return ResourceManager.GetString("ss_volume_dust_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Intensity of Screen Space Dynamic Occlusion. Can be changed from 0 to 100..
        /// </summary>
        public static string ssdo_int_desc {
            get {
                return ResourceManager.GetString("ssdo_int_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SSDO intensity.
        /// </summary>
        public static string ssdo_int_name {
            get {
                return ResourceManager.GetString("ssdo_int_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Probability of random stashes appearance..
        /// </summary>
        public static string stashes_desc {
            get {
                return ResourceManager.GetString("stashes_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Stashes probability, %.
        /// </summary>
        public static string stashes_name {
            get {
                return ResourceManager.GetString("stashes_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Stashes.
        /// </summary>
        public static string stashes_settings {
            get {
                return ResourceManager.GetString("stashes_settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Probability of finding common armor in a stalker&apos;s inventory upon his death. Can be changed in the range from 1 to 25. Does not affect exo drop probability..
        /// </summary>
        public static string suit_prob_desc {
            get {
                return ResourceManager.GetString("suit_prob_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Armor drop probability.
        /// </summary>
        public static string suit_prob_name {
            get {
                return ResourceManager.GetString("suit_prob_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Period between surges in game time hours. There is also a random bias (from -4 to 4 h)..
        /// </summary>
        public static string surge_timer_desc {
            get {
                return ResourceManager.GetString("surge_timer_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Surge frequency.
        /// </summary>
        public static string surge_timer_name {
            get {
                return ResourceManager.GetString("surge_timer_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The less the time factor is, the longer the days are..
        /// </summary>
        public static string time_factor_desc {
            get {
                return ResourceManager.GetString("time_factor_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Time factor.
        /// </summary>
        public static string time_factor_name {
            get {
                return ResourceManager.GetString("time_factor_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Time of game start.
        /// </summary>
        public static string time_start_name {
            get {
                return ResourceManager.GetString("time_start_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Update is available.
        /// </summary>
        public static string update_available {
            get {
                return ResourceManager.GetString("update_available", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Other.
        /// </summary>
        public static string various {
            get {
                return ResourceManager.GetString("various", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Must be within the range of 40 to 100 kg..
        /// </summary>
        public static string ves_desc {
            get {
                return ResourceManager.GetString("ves_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Maximum carry weight, kg.
        /// </summary>
        public static string ves_name {
            get {
                return ResourceManager.GetString("ves_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This option enables vignetting on screen (screen borders are darker than screen senter).
        /// </summary>
        public static string vignette_desc {
            get {
                return ResourceManager.GetString("vignette_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Intensity of vignetting. Can be changed from 0 to 100. The value of 100 results in totally dark pixels on screen borders..
        /// </summary>
        public static string vignette_int_desc {
            get {
                return ResourceManager.GetString("vignette_int_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Intensity of vignetting.
        /// </summary>
        public static string vignette_int_name {
            get {
                return ResourceManager.GetString("vignette_int_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Vignetting.
        /// </summary>
        public static string vignette_name {
            get {
                return ResourceManager.GetString("vignette_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This option controls the intensity of volumetric lamp lights. Can be changed from 0 to 100..
        /// </summary>
        public static string vol_light_max_int_desc {
            get {
                return ResourceManager.GetString("vol_light_max_int_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Lamp light volumetric intensity.
        /// </summary>
        public static string vol_light_max_int_name {
            get {
                return ResourceManager.GetString("vol_light_max_int_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This option controls the intensity of volumetric light from sun (&quot;Clear Sky&quot; type). Can be changed from 0 to 100..
        /// </summary>
        public static string vol_max_int_desc {
            get {
                return ResourceManager.GetString("vol_max_int_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Sunlight volumetric intensity.
        /// </summary>
        public static string vol_max_int_name {
            get {
                return ResourceManager.GetString("vol_max_int_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Wait for active download to be completed.
        /// </summary>
        public static string wait_for_download {
            get {
                return ResourceManager.GetString("wait_for_download", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bright.
        /// </summary>
        public static string weather_bright {
            get {
                return ResourceManager.GetString("weather_bright", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Standard.
        /// </summary>
        public static string weather_default {
            get {
                return ResourceManager.GetString("weather_default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Rainy.
        /// </summary>
        public static string weather_rainy {
            get {
                return ResourceManager.GetString("weather_rainy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This option changes the in-game weather presets..
        /// </summary>
        public static string weather_type_desc {
            get {
                return ResourceManager.GetString("weather_type_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Weather.
        /// </summary>
        public static string weather_type_name {
            get {
                return ResourceManager.GetString("weather_type_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на World.
        /// </summary>
        public static string world_settings {
            get {
                return ResourceManager.GetString("world_settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This option enables blood stains on the equipped mask when shooting somebody at close range..
        /// </summary>
        public static string zalyap_hud_desc {
            get {
                return ResourceManager.GetString("zalyap_hud_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Blood on masks.
        /// </summary>
        public static string zalyap_hud_name {
            get {
                return ResourceManager.GetString("zalyap_hud_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Intensity of Depth Of Field effect when zooming in. Can be changed from 0 to 100..
        /// </summary>
        public static string zdof_int_desc {
            get {
                return ResourceManager.GetString("zdof_int_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Zoom DOF intensity.
        /// </summary>
        public static string zdof_int_name {
            get {
                return ResourceManager.GetString("zdof_int_name", resourceCulture);
            }
        }
    }
}
